<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cooing.www.dy.dao.AlbumMapper">
	<insert id="personal_createAlbum" parameterType="albumwrite">
		insert into ALBUMLIST (
			ALBUM_NUM,
			ALBUM_WRITER,
			album_name,
			ALBUM_OPENRANGE
		)
		values (
			ALBUMLIST_SEQ.nextval,
			#{album_writer},
			#{album_name},
			#{album_openrange}
		)
		<selectKey keyProperty="album_num" resultType="Integer" order="AFTER"> 
			SELECT ALBUMLIST_SEQ.currval FROM dual
		</selectKey>
	</insert>
	
	<insert id="personal_insertAlbumOfPage" parameterType="page">
		insert into Page (
			PAGE_ID,
			ALBUM_NUM,
			PAGE_NUM,			
			PAGE_HTML
		)
		values (
			PAGE_SEQ.nextval,
			#{album_num},
			#{page_num},
			#{page_html}
		)
	</insert>
	
	<update id="personal_update_page1_Album" parameterType="albumwrite">
		update albumlist set 
			album_name = #{album_name},
			album_contents = #{album_contents},
			album_category = #{album_category},
			album_openrange = #{album_openrange}
		where
			album_num = #{album_num}
	</update>
	
	<update id="updateThumbnail" parameterType="map">
		update albumlist set album_thumbnail = #{album_thumbnail}
			where album_num = #{album_num}
	</update>
	
	<select id="personal_selectAlbum_Num" parameterType="String" resultType="int">
		select album_num from albumlist where ALBUM_IDENTIFIER = #{album_identifier}
	</select>
	
	<select id="searchAlbum" parameterType="String" resultType="albumwrite">
		select * from albumlist 
			where album_writer like '%'||#{search}||'%'
			or album_name like '%'||#{search}||'%'
			or album_contents like '%'||#{search}||'%'
	</select>
	
	<select id="searchCategory" parameterType="int" resultType="albumwrite">
		select * from albumlist 
			where album_category=#{album_category}
	</select>
	
	<select id="searchAlbumNum" parameterType="int" resultType="albumwrite">
		select * from albumlist	where album_num=#{searchnum}
	</select>
	
	<select id="searchPage1" parameterType="int" resultType="page">
		select * from page	where album_num=#{number} and page_num=1
	</select>
	
	<delete id="deleteAlbum" parameterType="int">
		delete	from albumlist where album_num=#{album_num}
	</delete>	
	
	
	<select id="TotalAlbumList" resultType="albumwrite">
		select *  from ALBUMLIST order by Album_num desc
	</select>
	
	<select id="MyAlbumList" parameterType="String" resultType="albumwrite">
		select *
	    from ALBUMLIST 
	    where ALBUM_WRITER = #{ALBUM_WRITER} 
	    order by Album_num desc
	</select>
	
	<select id="MyAlbumRead" parameterType="int" resultType="String">
		select page_html 
		from Page 
		where ALBUM_NUM = #{album_num}
		order by page_num asc
	</select>
	
</mapper>
