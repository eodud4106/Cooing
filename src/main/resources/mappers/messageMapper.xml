<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- message 처리 SQL -->
<mapper namespace="com.cooing.www.chat.dao.MessageMapper">

	<!-- message 저장 -->
	<insert id="insertMessage" parameterType="message">
	INSERT INTO message (
		message_id,
		sender,
		addressee,
		is1to1,
		message,
		unread,
		send_date
	)
	VALUES (
		message_seq.nextval,
		#{sender},
		#{addressee},
		#{is1to1},
		#{message},
		<if test="is1to1 == 1">
		CONCAT( (CONCAT('.', #{addressee})), '.'),
		</if>
		<if test="is1to1 == 0">
		(
		SELECT 
			LISTAGG( CONCAT( (CONCAT('.', g_member_memberid)), '.'), '')
			WITHIN GROUP (ORDER BY g_member_memberid)
		FROM
			(SELECT
				p1.party_num,
				p1.party_name,
				p2.g_member_memberid
			FROM
				party p1
			JOIN
				partymember p2
			ON
				p1.party_num = p2.g_member_memberid) p
		WHERE
			g_member_memberid != #{sender}
			AND party_name = #{addressee}
		GROUP BY party_name
		),
		</if>
		sysdate
	)
	<selectKey keyProperty="message_id,unread" resultType="message" order="AFTER"> 
		SELECT
			message_seq.currval AS message_id,
			<if test="is1to1 == 1">
			1 AS unread
			</if>
			<if test="is1to1 == 0">
			(SELECT
				count(*)-1
			FROM
				(SELECT
					p1.party_num,
					p1.party_name,
					p2.g_member_memberid
				FROM
					party p1
				JOIN
					partymember p2
				ON
					p1.party_num = p2.g_member_memberid) p
			WHERE
				party_name = #{addressee}
			) AS unread
			</if>
		FROM dual
	</selectKey>
	</insert>
	
	<!-- message 읽음 처리 -->
	<update id="updateMessage" parameterType="message">
	<selectKey keyProperty="ids" resultType="String" order="BEFORE"> 
		SELECT
			LISTAGG( CONCAT( (CONCAT('.', MESSAGE_ID)), '.'), '')
			WITHIN GROUP (ORDER BY MESSAGE_ID) AS ids
		FROM message
		WHERE
			<if test="is1to1 == 1">
			sender = #{sender}
			AND
			addressee = #{addressee}
			</if>
			<if test="is1to1 == 0">
			addressee = #{sender}
			</if>
			AND
			unread LIKE CONCAT(CONCAT('%.', #{unread}), '.%')
	</selectKey>
	UPDATE message
	SET
		unread = REPLACE(unread, CONCAT(CONCAT('.', #{unread}), '.'), '')
	WHERE
		unread LIKE CONCAT(CONCAT('%.', #{unread}), '.%')
		<if test="is1to1 == 1">
		AND
		sender = #{sender}
		AND
		addressee = #{addressee}
		</if>
		<if test="is1to1 == 0">
		AND
		addressee = #{sender}
		</if>
	</update>
	
	<!-- 메시지 조회 -->
	<select id="selectMessage" resultType="message">
	SELECT
		message_id,
		sender,
		addressee,
		is1to1,
		message,
		nvl(((length(unread) - length(replace(unread, '.', ''))) / 2), 0) AS unread,
		send_date
	FROM message
	WHERE
		<if test="is1to1 == 1">
		addressee = #{userId} AND sender = #{counterpart}
		OR
		addressee = #{counterpart} AND sender = #{userId}
		</if>
		<if test="is1to1 == 0">
		addressee = #{counterpart}
		</if>
	</select>
	
	<!--메시지 중 아직 읽지 않은 메시지의 개수를 조회 -->
	<select id="select_unread_message" resultType="message">
	SELECT
		sender as sender,
		count(*) as unread,
		(SELECT 1 FROM dual) as is1to1
	FROM
		message
	WHERE
		unread like CONCAT(CONCAT('%.', #{unread}), '.%') AND is1to1 = 1
	GROUP BY
		sender
	UNION
	SELECT
		addressee as sender,
		count(*) as unread,
		(select 0 from dual) as is1to1
	FROM
		message
	WHERE
		unread like CONCAT(CONCAT('%.', #{unread}), '.%') AND is1to1 = 0
	GROUP BY
		addressee
	</select>

</mapper>
